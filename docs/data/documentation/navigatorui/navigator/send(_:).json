{"abstract":[{"text":"Sends a value or values to navigation receivers throughout the application.","type":"text"}],"metadata":{"modules":[{"name":"NavigatorUI"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:11NavigatorUI0A0V4sendyySH_pd_tF","title":"send(_:)","extendedModule":"NavigatorUI","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":"...)"}],"role":"symbol"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"values"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":"...)"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This is the core functionality behind deep linking support in Navigator."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The primary difference between this and "},{"type":"codeVoice","code":"navigate(to:)"},{"type":"text","text":" is that you don’t need to know what navigator is handling"},{"type":"text","text":" "},{"type":"text","text":"the request, nor does the value need to be of type "},{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"They just need to be "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Sending-Values","level":3,"text":"Sending Values","type":"heading"},{"inlineContent":[{"type":"text","text":"The following code broadcasts a list of actions to be handled somewhere in the application. First it selects the Home tab,"},{"type":"text","text":" "},{"type":"text","text":"then navigates to Page 2."}],"type":"paragraph"},{"syntax":"swift","code":["Button(\"Go To Tab Home, Page 2\") {","    navigator.send(","        RootTabs.home,","        HomeDestinations.page2","    )","}"],"type":"codeListing"},{"anchor":"Receiving-Values","level":3,"text":"Receiving Values","type":"heading"},{"inlineContent":[{"type":"text","text":"Receiving values is simple. Just register a receive handler for the desired type."}],"type":"paragraph"},{"syntax":"swift","code":[".onNavigationReceive { (tab: RootTabs) in","    if tab == selectedTab {","        return .immediately","    }","    selectedTab = tab","    return .auto","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"And then perform whatever action is needed on receipt."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Here’s the handler for "},{"type":"codeVoice","code":"HomeDestinations"},{"type":"text","text":".`"}],"type":"paragraph"},{"syntax":"swift","code":[".onNavigationReceive { (destination: HomeDestinations, navigator) in","    navigator.navigate(to: destination)","    return .auto","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Speaking of which, receive handlers return a value of type "},{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationReceiveResumeType","isActive":true,"type":"reference"},{"type":"text","text":", which tells Navigator how to"},{"type":"text","text":" "},{"type":"text","text":"process the remaining values in the queue. Additional values can be paused, cancelled, or simply processed normally."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Note that there should be one and only one registered handler for a given type in the navigation tree. If more than"},{"type":"text","text":" "},{"type":"text","text":"one exists the first handler will consume the value and the remaining handlers should be ignored."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigatorui\/navigator\/send(_:)"]}],"identifier":{"url":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator\/send(_:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/NavigatorUI\/documentation\/NavigatorUI","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator"]]},"references":{"doc://NavigatorUI/documentation/NavigatorUI/Navigator/send(_:)":{"kind":"symbol","abstract":[{"text":"Sends a value or values to navigation receivers throughout the application.","type":"text"}],"role":"symbol","url":"\/documentation\/navigatorui\/navigator\/send(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":"...)"}],"title":"send(_:)","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator\/send(_:)"},"doc://NavigatorUI/documentation/NavigatorUI/Navigator":{"title":"Navigator","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Navigator"}],"url":"\/documentation\/navigatorui\/navigator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Navigator"}],"abstract":[{"type":"text","text":"Every ManagedNavigationStack has a Navigator to manage it."}],"role":"symbol","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI":{"abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/navigatorui","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI","title":"NavigatorUI","role":"collection"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationReceiveResumeType":{"title":"NavigationReceiveResumeType","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationReceiveResumeType","kind":"symbol","navigatorTitle":[{"text":"NavigationReceiveResumeType","kind":"identifier"}],"url":"\/documentation\/navigatorui\/navigationreceiveresumetype","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationReceiveResumeType","kind":"identifier"}],"abstract":[],"role":"symbol","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination":{"title":"NavigationDestination","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"url":"\/documentation\/navigatorui\/navigationdestination","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"NavigationDestination","kind":"identifier"}],"abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"role":"symbol","type":"topic"}}}