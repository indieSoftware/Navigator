{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationDestination"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP","text":"Identifiable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"NavigationDestination types can be used in order to push and present views as needed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This can happen using…"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Standard SwiftUI modifiers like ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Imperatively by asking a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator"},{"text":" to perform the desired action.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Or via a deep link action enabled by a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationURLHandler"},{"text":".","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"They’re one of the core elements that make Navigator possible."}],"type":"paragraph"},{"level":3,"text":"Defining Navigation Destinations","type":"heading","anchor":"Defining-Navigation-Destinations"},{"inlineContent":[{"type":"text","text":"Destinations are typically just a simple list of enumerated values."}],"type":"paragraph"},{"code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Along with an extension that provides the correct view for a specific case."}],"type":"paragraph"},{"code":["extension HomeDestinations: NavigationDestination {","    public var body: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Yes, NavigationDestination’s are Views!"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Note how associated values can be used to pass parameters to views as needed."}],"type":"paragraph"},{"type":"aside","style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As of 6.2 it looks like "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" conformance "},{"type":"strong","inlineContent":[{"text":"must","type":"text"}]},{"type":"text","text":" be done as an extension and "},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" on the original"},{"type":"text","text":" "},{"type":"text","text":"enumeration. This aligns with Swift 6.2’s requirement that protocol isolation must be explicit at the conformance site."}]}]},{"type":"heading","level":3,"anchor":"Using-Navigation-Destinations","text":"Using Navigation Destinations"},{"inlineContent":[{"text":"This can be done via using a standard SwiftUI ","type":"text"},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"text":" view.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["NavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or imperatively by asking a Navigator to perform the desired action."}]},{"type":"codeListing","syntax":"swift","code":["Button(\"Button Navigate to Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"]},{"text":"Registering Navigation Destinations","level":3,"type":"heading","anchor":"Registering-Navigation-Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Like traditional "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" destination types, "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" types need to be registered with the enclosing"},{"type":"text","text":" "},{"type":"text","text":"navigation stack in order for standard "},{"type":"codeVoice","code":"NavigationLink(value:label:)"},{"type":"text","text":" transitions to work correctly."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But since each "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" already defines the view to be provided, registering destination types can be done"},{"type":"text","text":" "},{"type":"text","text":"using a simple one-line view modifier."}]},{"type":"codeListing","code":["ManagedNavigationStack {","    HomeView()","        .navigationDestination(HomeDestinations.self)","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This also makes using the same destination type with more than one navigation stack a lot easier.","type":"text"}]},{"level":3,"type":"heading","text":"Navigation Methods","anchor":"Navigation-Methods"},{"inlineContent":[{"code":"NavigationDestination","type":"codeVoice"},{"type":"text","text":" can also be extended to provide a distinct "},{"isActive":true,"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod","type":"reference"},{"type":"text","text":" for each enumerated type."}],"type":"paragraph"},{"code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"In this case, should "},{"code":"navigator.navigate(to: HomeDestinations.page3)","type":"codeVoice"},{"type":"text","text":" be called, Navigator will automatically present that view in a"},{"text":" ","type":"text"},{"type":"text","text":"sheet. All other views will be pushed onto the navigation stack."}],"type":"paragraph"},{"name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"code":"NavigationLink(value:label:)","type":"codeVoice"},{"text":" the method will be ignored and SwiftUI will push","type":"text"},{"text":" ","type":"text"},{"text":"the value onto the navigation stack as it would normally.","type":"text"}]}],"style":"important","type":"aside"}]}],"metadata":{"modules":[{"name":"NavigatorUI"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationDestination"}],"symbolKind":"protocol","roleHeading":"Protocol","externalID":"s:11NavigatorUI21NavigationDestinationP","navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"title":"NavigationDestination","role":"symbol"},"topicSections":[{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/method","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/receiveResumeType"],"title":"Instance Properties"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/asAnyView()","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/callAsFunction()"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/NavigatorUI\/documentation\/NavigatorUI"]]},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/NavigatorUI\/SQ","doc:\/\/NavigatorUI\/SH","doc:\/\/NavigatorUI\/s12IdentifiableP","doc:\/\/NavigatorUI\/7SwiftUI4ViewP"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationProvidedDestination"],"type":"inheritedBy","kind":"relationships","title":"Inherited By"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigatorui\/navigationdestination"]}],"abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"sections":[],"references":{"doc://NavigatorUI/SH":{"identifier":"doc:\/\/NavigatorUI\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination":{"title":"NavigationDestination","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}],"url":"\/documentation\/navigatorui\/navigationdestination","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"NavigationDestination","kind":"identifier"}],"abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"role":"symbol","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationMethod":{"title":"NavigationMethod","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NavigationMethod"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"NavigationMethod","kind":"identifier"}],"url":"\/documentation\/navigatorui\/navigationmethod","abstract":[{"type":"text","text":"Defines the desired presentation mechanism for a given "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":"."}],"kind":"symbol"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/asAnyView()":{"title":"asAnyView()","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/asAnyView()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asAnyView","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyView","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7AnyViewV"}],"url":"\/documentation\/navigatorui\/navigationdestination\/asanyview()","abstract":[{"text":"Convenience function explicitly returns AnyView.","type":"text"}],"kind":"symbol"},"doc://NavigatorUI/documentation/NavigatorUI/Navigator":{"title":"Navigator","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Navigator"}],"url":"\/documentation\/navigatorui\/navigator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Navigator"}],"abstract":[{"type":"text","text":"Every ManagedNavigationStack has a Navigator to manage it."}],"role":"symbol","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationURLHandler":{"abstract":[{"text":"Provides Deep Linking support.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/navigatorui\/navigationurlhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"NavigationURLHandler","kind":"identifier"}],"title":"NavigationURLHandler","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationURLHandler","navigatorTitle":[{"kind":"identifier","text":"NavigationURLHandler"}]},"doc://NavigatorUI/7SwiftUI4ViewP":{"type":"unresolvable","identifier":"doc:\/\/NavigatorUI\/7SwiftUI4ViewP","title":"SwiftUICore.View"},"doc://NavigatorUI/documentation/NavigatorUI":{"abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/navigatorui","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI","title":"NavigatorUI","role":"collection"},"doc://NavigatorUI/SQ":{"type":"unresolvable","identifier":"doc:\/\/NavigatorUI\/SQ","title":"Swift.Equatable"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationProvidedDestination":{"abstract":[{"text":"Defines a set of view destinations whose views will be provided elsewhere by the ","type":"text"},{"type":"codeVoice","code":"onNavigationProvidedView"},{"type":"text","text":" modifier."}],"kind":"symbol","role":"symbol","url":"\/documentation\/navigatorui\/navigationprovideddestination","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationProvidedDestination"}],"title":"NavigationProvidedDestination","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationProvidedDestination","navigatorTitle":[{"kind":"identifier","text":"NavigationProvidedDestination"}]},"doc://NavigatorUI/s12IdentifiableP":{"type":"unresolvable","identifier":"doc:\/\/NavigatorUI\/s12IdentifiableP","title":"Swift.Identifiable"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/receiveResumeType":{"title":"receiveResumeType","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"receiveResumeType","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NavigationReceiveResumeType","preciseIdentifier":"s:11NavigatorUI27NavigationReceiveResumeTypeO"}],"kind":"symbol","url":"\/documentation\/navigatorui\/navigationdestination\/receiveresumetype","abstract":[{"text":"Can be overridden to define a specific send resume type for each destination.","type":"text"}],"defaultImplementations":1,"type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/receiveResumeType"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/callAsFunction()":{"role":"symbol","abstract":[{"type":"text","text":"Convenience shortcut to implicitly return AnyView."}],"title":"callAsFunction()","kind":"symbol","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/callAsFunction()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyView","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7AnyViewV"}],"url":"\/documentation\/navigatorui\/navigationdestination\/callasfunction()","type":"topic"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/method":{"abstract":[{"text":"Can be overridden to define a specific presentation type for each destination.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/navigatorui\/navigationdestination\/method","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"method","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NavigationMethod","kind":"typeIdentifier","preciseIdentifier":"s:11NavigatorUI16NavigationMethodO"}],"title":"method","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/method","defaultImplementations":1,"required":true}}}